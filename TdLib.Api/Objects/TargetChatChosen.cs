using System;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        public partial class TargetChat : Object
        {
            /// <summary>
            /// The chat needs to be chosen by the user among chats of the specified types
            /// </summary>
            public class TargetChatChosen : TargetChat
            {
                /// <summary>
                /// Data type for serialization
                /// </summary>
                [JsonProperty("@type")]
                public override string DataType { get; set; } = "targetChatChosen";

                /// <summary>
                /// Extra data attached to the message
                /// </summary>
                [JsonProperty("@extra")]
                public override string Extra { get; set; }

                /// <summary>
                /// True, if private chats with ordinary users are allowed
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("allow_user_chats")]
                public bool AllowUserChats { get; set; }

                /// <summary>
                /// True, if private chats with other bots are allowed
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("allow_bot_chats")]
                public bool AllowBotChats { get; set; }

                /// <summary>
                /// True, if basic group and supergroup chats are allowed
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("allow_group_chats")]
                public bool AllowGroupChats { get; set; }

                /// <summary>
                /// True, if channel chats are allowed
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("allow_channel_chats")]
                public bool AllowChannelChats { get; set; }
            }
        }
    }
}
// REUSE-IgnoreEnd