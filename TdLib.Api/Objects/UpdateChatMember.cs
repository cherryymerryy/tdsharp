using System;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        public partial class Update : Object
        {
            /// <summary>
            /// User rights changed in a chat; for bots only
            /// </summary>
            public class UpdateChatMember : Update
            {
                /// <summary>
                /// Data type for serialization
                /// </summary>
                [JsonProperty("@type")]
                public override string DataType { get; set; } = "updateChatMember";

                /// <summary>
                /// Extra data attached to the message
                /// </summary>
                [JsonProperty("@extra")]
                public override string Extra { get; set; }

                /// <summary>
                /// Chat identifier
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("chat_id")]
                public long ChatId { get; set; }

                /// <summary>
                /// Identifier of the user, changing the rights
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("actor_user_id")]
                public long ActorUserId { get; set; }

                /// <summary>
                /// Point in time (Unix timestamp) when the user rights were changed
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("date")]
                public int Date { get; set; }

                /// <summary>
                /// If user has joined the chat using an invite link, the invite link; may be null
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("invite_link")]
                public ChatInviteLink InviteLink { get; set; }

                /// <summary>
                /// True, if the user has joined the chat after sending a join request and being approved by an administrator
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("via_join_request")]
                public bool ViaJoinRequest { get; set; }

                /// <summary>
                /// True, if the user has joined the chat using an invite link for a chat folder
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("via_chat_folder_invite_link")]
                public bool ViaChatFolderInviteLink { get; set; }

                /// <summary>
                /// Previous chat member
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("old_chat_member")]
                public ChatMember OldChatMember { get; set; }

                /// <summary>
                /// New chat member
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("new_chat_member")]
                public ChatMember NewChatMember { get; set; }
            }
        }
    }
}
// REUSE-IgnoreEnd