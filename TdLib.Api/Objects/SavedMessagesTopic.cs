using System;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Contains information about a Saved Messages topic
        /// </summary>
        public partial class SavedMessagesTopic : Object
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "savedMessagesTopic";

            /// <summary>
            /// Extra data attached to the object
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Unique topic identifier
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("id")]
            public long Id { get; set; }

            /// <summary>
            /// Type of the topic
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("type")]
            public SavedMessagesTopicType Type { get; set; }

            /// <summary>
            /// True, if the topic is pinned
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("is_pinned")]
            public bool IsPinned { get; set; }

            /// <summary>
            /// A parameter used to determine order of the topic in the topic list. Topics must be sorted by the order in descending order
            /// </summary>
            [JsonConverter(typeof(Converter.Int64))]
            [JsonProperty("order")]
            public long Order { get; set; }

            /// <summary>
            /// Last message in the topic; may be null if none or unknown
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("last_message")]
            public Message LastMessage { get; set; }

            /// <summary>
            /// A draft of a message in the topic; may be null if none
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("draft_message")]
            public DraftMessage DraftMessage { get; set; }
        }
    }
}
// REUSE-IgnoreEnd