using System;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Describes a boost applied to a chat
        /// </summary>
        public partial class ChatBoost : Object
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "chatBoost";

            /// <summary>
            /// Extra data attached to the object
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Unique identifier of the boost
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("id")]
            public string Id { get; set; }

            /// <summary>
            /// The number of identical boosts applied
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("count")]
            public int Count { get; set; }

            /// <summary>
            /// Source of the boost
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("source")]
            public ChatBoostSource Source { get; set; }

            /// <summary>
            /// Point in time (Unix timestamp) when the chat was boosted
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("start_date")]
            public int StartDate { get; set; }

            /// <summary>
            /// Point in time (Unix timestamp) when the boost will expire
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("expiration_date")]
            public int ExpirationDate { get; set; }
        }
    }
}
// REUSE-IgnoreEnd