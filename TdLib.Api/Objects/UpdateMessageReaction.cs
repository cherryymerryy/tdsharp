using System;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        public partial class Update : Object
        {
            /// <summary>
            /// User changed its reactions on a message with public reactions; for bots only
            /// </summary>
            public class UpdateMessageReaction : Update
            {
                /// <summary>
                /// Data type for serialization
                /// </summary>
                [JsonProperty("@type")]
                public override string DataType { get; set; } = "updateMessageReaction";

                /// <summary>
                /// Extra data attached to the message
                /// </summary>
                [JsonProperty("@extra")]
                public override string Extra { get; set; }

                /// <summary>
                /// Chat identifier
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("chat_id")]
                public long ChatId { get; set; }

                /// <summary>
                /// Message identifier
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("message_id")]
                public long MessageId { get; set; }

                /// <summary>
                /// Identifier of the user or chat that changed reactions
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("actor_id")]
                public MessageSender ActorId { get; set; }

                /// <summary>
                /// Point in time (Unix timestamp) when the reactions were changed
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("date")]
                public int Date { get; set; }

                /// <summary>
                /// Old list of chosen reactions
                /// </summary>
                [JsonProperty("old_reaction_types", ItemConverterType = typeof(Converter))]
                public ReactionType[] OldReactionTypes { get; set; }

                /// <summary>
                /// New list of chosen reactions
                /// </summary>
                [JsonProperty("new_reaction_types", ItemConverterType = typeof(Converter))]
                public ReactionType[] NewReactionTypes { get; set; }
            }
        }
    }
}
// REUSE-IgnoreEnd