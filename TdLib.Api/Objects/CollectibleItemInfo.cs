using System;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Contains information about a collectible item and its last purchase
        /// </summary>
        public partial class CollectibleItemInfo : Object
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "collectibleItemInfo";

            /// <summary>
            /// Extra data attached to the object
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Point in time (Unix timestamp) when the item was purchased
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("purchase_date")]
            public int PurchaseDate { get; set; }

            /// <summary>
            /// Currency for the paid amount
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("currency")]
            public string Currency { get; set; }

            /// <summary>
            /// The paid amount, in the smallest units of the currency
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("amount")]
            public long Amount { get; set; }

            /// <summary>
            /// Cryptocurrency used to pay for the item
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("cryptocurrency")]
            public string Cryptocurrency { get; set; }

            /// <summary>
            /// The paid amount, in the smallest units of the cryptocurrency
            /// </summary>
            [JsonConverter(typeof(Converter.Int64))]
            [JsonProperty("cryptocurrency_amount")]
            public long CryptocurrencyAmount { get; set; }

            /// <summary>
            /// Individual URL for the item on https://fragment.com
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("url")]
            public string Url { get; set; }
        }
    }
}
// REUSE-IgnoreEnd