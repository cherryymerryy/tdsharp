using System;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Describes a backdrop of an upgraded gift
        /// </summary>
        public partial class UpgradedGiftBackdrop : Object
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "upgradedGiftBackdrop";

            /// <summary>
            /// Extra data attached to the object
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Name of the backdrop
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("name")]
            public string Name { get; set; }

            /// <summary>
            /// A color in the center of the backdrop in the RGB format
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("center_color")]
            public int CenterColor { get; set; }

            /// <summary>
            /// A color on the edges of the backdrop in the RGB format
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("edge_color")]
            public int EdgeColor { get; set; }

            /// <summary>
            /// A color to be applied for the symbol in the RGB format
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("symbol_color")]
            public int SymbolColor { get; set; }

            /// <summary>
            /// A color for the text on the backdrop in the RGB format
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("text_color")]
            public int TextColor { get; set; }

            /// <summary>
            /// The number of upgraded gift that receive this backdrop for each 1000 gifts upgraded
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("rarity_per_mille")]
            public int RarityPerMille { get; set; }
        }
    }
}
// REUSE-IgnoreEnd