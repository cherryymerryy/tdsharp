using System;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Describes a slot for chat boost
        /// </summary>
        public partial class ChatBoostSlot : Object
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "chatBoostSlot";

            /// <summary>
            /// Extra data attached to the object
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Unique identifier of the slot
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("slot_id")]
            public int SlotId { get; set; }

            /// <summary>
            /// Identifier of the currently boosted chat; 0 if none
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("currently_boosted_chat_id")]
            public long CurrentlyBoostedChatId { get; set; }

            /// <summary>
            /// Point in time (Unix timestamp) when the chat was boosted; 0 if none
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("start_date")]
            public int StartDate { get; set; }

            /// <summary>
            /// Point in time (Unix timestamp) when the boost will expire
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("expiration_date")]
            public int ExpirationDate { get; set; }

            /// <summary>
            /// Point in time (Unix timestamp) after which the boost can be used for another chat
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("cooldown_until_date")]
            public int CooldownUntilDate { get; set; }
        }
    }
}
// REUSE-IgnoreEnd