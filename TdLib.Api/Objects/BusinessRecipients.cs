using System;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Describes private chats chosen for automatic interaction with a business
        /// </summary>
        public partial class BusinessRecipients : Object
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "businessRecipients";

            /// <summary>
            /// Extra data attached to the object
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Identifiers of selected private chats
            /// </summary>
            [JsonProperty("chat_ids", ItemConverterType = typeof(Converter))]
            public long[] ChatIds { get; set; }

            /// <summary>
            /// Identifiers of private chats that are always excluded; for businessConnectedBot only
            /// </summary>
            [JsonProperty("excluded_chat_ids", ItemConverterType = typeof(Converter))]
            public long[] ExcludedChatIds { get; set; }

            /// <summary>
            /// True, if all existing private chats are selected
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("select_existing_chats")]
            public bool SelectExistingChats { get; set; }

            /// <summary>
            /// True, if all new private chats are selected
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("select_new_chats")]
            public bool SelectNewChats { get; set; }

            /// <summary>
            /// True, if all private chats with contacts are selected
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("select_contacts")]
            public bool SelectContacts { get; set; }

            /// <summary>
            /// True, if all private chats with non-contacts are selected
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("select_non_contacts")]
            public bool SelectNonContacts { get; set; }

            /// <summary>
            /// If true, then all private chats except the selected are chosen. Otherwise, only the selected chats are chosen
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("exclude_selected")]
            public bool ExcludeSelected { get; set; }
        }
    }
}
// REUSE-IgnoreEnd