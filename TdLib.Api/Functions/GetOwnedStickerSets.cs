using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Returns sticker sets owned by the current user
        /// </summary>
        public class GetOwnedStickerSets : Function<StickerSets>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "getOwnedStickerSets";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Identifier of the sticker set from which to return owned sticker sets; use 0 to get results from the beginning
            /// </summary>
            [JsonConverter(typeof(Converter.Int64))]
            [JsonProperty("offset_sticker_set_id")]
            public long OffsetStickerSetId { get; set; }

            /// <summary>
            /// The maximum number of sticker sets to be returned; must be positive and can't be greater than 100. For optimal performance, the number of returned objects is chosen by TDLib and can be smaller than the specified limit
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("limit")]
            public int Limit { get; set; }
        }

        /// <summary>
        /// Returns sticker sets owned by the current user
        /// </summary>
        public static Task<StickerSets> GetOwnedStickerSetsAsync(
            this Client client, long offsetStickerSetId = default, int limit = default)
        {
            return client.ExecuteAsync(new GetOwnedStickerSets
            {
                OffsetStickerSetId = offsetStickerSetId, Limit = limit
            });
        }
    }
}
// REUSE-IgnoreEnd