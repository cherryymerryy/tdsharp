using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Searches for emojis by keywords. Supported only if the file database is enabled. Order of results is unspecified
        /// </summary>
        public class SearchEmojis : Function<EmojiKeywords>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "searchEmojis";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Text to search for
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("text")]
            public string Text { get; set; }

            /// <summary>
            /// List of possible IETF language tags of the user's input language; may be empty if unknown
            /// </summary>
            [JsonProperty("input_language_codes", ItemConverterType = typeof(Converter))]
            public string[] InputLanguageCodes { get; set; }
        }

        /// <summary>
        /// Searches for emojis by keywords. Supported only if the file database is enabled. Order of results is unspecified
        /// </summary>
        public static Task<EmojiKeywords> SearchEmojisAsync(
            this Client client, string text = default, string[] inputLanguageCodes = default)
        {
            return client.ExecuteAsync(new SearchEmojis
            {
                Text = text, InputLanguageCodes = inputLanguageCodes
            });
        }
    }
}
// REUSE-IgnoreEnd