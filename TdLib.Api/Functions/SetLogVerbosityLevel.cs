using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Sets the verbosity level of the internal logging of TDLib. Can be called synchronously
        /// </summary>
        public class SetLogVerbosityLevel : Function<Ok>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "setLogVerbosityLevel";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// New value of the verbosity level for logging. Value 0 corresponds to fatal errors, value 1 corresponds to errors, value 2 corresponds to warnings and debug warnings,
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("new_verbosity_level")]
            public int NewVerbosityLevel { get; set; }
        }

        /// <summary>
        /// Sets the verbosity level of the internal logging of TDLib. Can be called synchronously
        /// </summary>
        public static Task<Ok> SetLogVerbosityLevelAsync(
            this Client client, int newVerbosityLevel = default)
        {
            return client.ExecuteAsync(new SetLogVerbosityLevel
            {
                NewVerbosityLevel = newVerbosityLevel
            });
        }
    }
}
// REUSE-IgnoreEnd