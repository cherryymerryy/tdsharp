using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Returns approximate number of chats in a being created chat folder. Main and archive chat lists must be fully preloaded for this function to work correctly
        /// </summary>
        public class GetChatFolderChatCount : Function<Count>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "getChatFolderChatCount";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// The new chat folder
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("folder")]
            public ChatFolder Folder { get; set; }
        }

        /// <summary>
        /// Returns approximate number of chats in a being created chat folder. Main and archive chat lists must be fully preloaded for this function to work correctly
        /// </summary>
        public static Task<Count> GetChatFolderChatCountAsync(
            this Client client, ChatFolder folder = default)
        {
            return client.ExecuteAsync(new GetChatFolderChatCount
            {
                Folder = folder
            });
        }
    }
}
// REUSE-IgnoreEnd