using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Returns information needed to open the main Web App of a bot
        /// </summary>
        public class GetMainWebApp : Function<MainWebApp>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "getMainWebApp";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Identifier of the chat in which the Web App is opened; pass 0 if none
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("chat_id")]
            public long ChatId { get; set; }

            /// <summary>
            /// Identifier of the target bot
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("bot_user_id")]
            public long BotUserId { get; set; }

            /// <summary>
            /// Start parameter from internalLinkTypeMainWebApp
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("start_parameter")]
            public string StartParameter { get; set; }

            /// <summary>
            /// Preferred Web App theme; pass null to use the default theme
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("theme")]
            public ThemeParameters Theme { get; set; }

            /// <summary>
            /// Short name of the current application; 0-64 English letters, digits, and underscores
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("application_name")]
            public string ApplicationName { get; set; }
        }

        /// <summary>
        /// Returns information needed to open the main Web App of a bot
        /// </summary>
        public static Task<MainWebApp> GetMainWebAppAsync(
            this Client client, long chatId = default, long botUserId = default, string startParameter = default, ThemeParameters theme = default, string applicationName = default)
        {
            return client.ExecuteAsync(new GetMainWebApp
            {
                ChatId = chatId, BotUserId = botUserId, StartParameter = startParameter, Theme = theme, ApplicationName = applicationName
            });
        }
    }
}
// REUSE-IgnoreEnd