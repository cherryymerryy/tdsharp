using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Creates a new invite link for a chat folder. A link can be created for a chat folder if it has only pinned and included chats
        /// </summary>
        public class CreateChatFolderInviteLink : Function<ChatFolderInviteLink>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "createChatFolderInviteLink";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Chat folder identifier
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("chat_folder_id")]
            public int ChatFolderId { get; set; }

            /// <summary>
            /// Name of the link; 0-32 characters
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("name")]
            public string Name { get; set; }

            /// <summary>
            /// Identifiers of chats to be accessible by the invite link. Use getChatsForChatFolderInviteLink to get suitable chats. Basic groups will be automatically converted to supergroups before link creation
            /// </summary>
            [JsonProperty("chat_ids", ItemConverterType = typeof(Converter))]
            public long[] ChatIds { get; set; }
        }

        /// <summary>
        /// Creates a new invite link for a chat folder. A link can be created for a chat folder if it has only pinned and included chats
        /// </summary>
        public static Task<ChatFolderInviteLink> CreateChatFolderInviteLinkAsync(
            this Client client, int chatFolderId = default, string name = default, long[] chatIds = default)
        {
            return client.ExecuteAsync(new CreateChatFolderInviteLink
            {
                ChatFolderId = chatFolderId, Name = name, ChatIds = chatIds
            });
        }
    }
}
// REUSE-IgnoreEnd