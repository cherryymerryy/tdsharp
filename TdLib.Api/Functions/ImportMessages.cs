using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Imports messages exported from another app
        /// </summary>
        public class ImportMessages : Function<Ok>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "importMessages";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Identifier of a chat to which the messages will be imported. It must be an identifier of a private chat with a mutual contact or an identifier of a supergroup chat with can_change_info member right
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("chat_id")]
            public long ChatId { get; set; }

            /// <summary>
            /// File with messages to import. Only inputFileLocal and inputFileGenerated are supported. The file must not be previously uploaded
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("message_file")]
            public InputFile MessageFile { get; set; }

            /// <summary>
            /// Files used in the imported messages. Only inputFileLocal and inputFileGenerated are supported. The files must not be previously uploaded
            /// </summary>
            [JsonProperty("attached_files", ItemConverterType = typeof(Converter))]
            public InputFile[] AttachedFiles { get; set; }
        }

        /// <summary>
        /// Imports messages exported from another app
        /// </summary>
        public static Task<Ok> ImportMessagesAsync(
            this Client client, long chatId = default, InputFile messageFile = default, InputFile[] attachedFiles = default)
        {
            return client.ExecuteAsync(new ImportMessages
            {
                ChatId = chatId, MessageFile = messageFile, AttachedFiles = attachedFiles
            });
        }
    }
}
// REUSE-IgnoreEnd