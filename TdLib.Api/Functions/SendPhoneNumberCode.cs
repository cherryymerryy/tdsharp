using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Sends a code to the specified phone number. Aborts previous phone number verification if there was one. On success, returns information about the sent code
        /// </summary>
        public class SendPhoneNumberCode : Function<AuthenticationCodeInfo>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "sendPhoneNumberCode";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// The phone number, in international format
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("phone_number")]
            public string PhoneNumber { get; set; }

            /// <summary>
            /// Settings for the authentication of the user's phone number; pass null to use default settings
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("settings")]
            public PhoneNumberAuthenticationSettings Settings { get; set; }

            /// <summary>
            /// Type of the request for which the code is sent
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("type")]
            public PhoneNumberCodeType Type { get; set; }
        }

        /// <summary>
        /// Sends a code to the specified phone number. Aborts previous phone number verification if there was one. On success, returns information about the sent code
        /// </summary>
        public static Task<AuthenticationCodeInfo> SendPhoneNumberCodeAsync(
            this Client client, string phoneNumber = default, PhoneNumberAuthenticationSettings settings = default, PhoneNumberCodeType type = default)
        {
            return client.ExecuteAsync(new SendPhoneNumberCode
            {
                PhoneNumber = phoneNumber, Settings = settings, Type = type
            });
        }
    }
}
// REUSE-IgnoreEnd