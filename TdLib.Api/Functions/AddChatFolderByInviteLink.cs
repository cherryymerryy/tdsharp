using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Adds a chat folder by an invite link
        /// </summary>
        public class AddChatFolderByInviteLink : Function<Ok>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "addChatFolderByInviteLink";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Invite link for the chat folder
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("invite_link")]
            public string InviteLink { get; set; }

            /// <summary>
            /// Identifiers of the chats added to the chat folder. The chats are automatically joined if they aren't joined yet
            /// </summary>
            [JsonProperty("chat_ids", ItemConverterType = typeof(Converter))]
            public long[] ChatIds { get; set; }
        }

        /// <summary>
        /// Adds a chat folder by an invite link
        /// </summary>
        public static Task<Ok> AddChatFolderByInviteLinkAsync(
            this Client client, string inviteLink = default, long[] chatIds = default)
        {
            return client.ExecuteAsync(new AddChatFolderByInviteLink
            {
                InviteLink = inviteLink, ChatIds = chatIds
            });
        }
    }
}
// REUSE-IgnoreEnd