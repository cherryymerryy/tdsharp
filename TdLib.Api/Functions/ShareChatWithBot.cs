using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Shares a chat after pressing a keyboardButtonTypeRequestChat button with the bot
        /// </summary>
        public class ShareChatWithBot : Function<Ok>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "shareChatWithBot";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Identifier of the chat with the bot
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("chat_id")]
            public long ChatId { get; set; }

            /// <summary>
            /// Identifier of the message with the button
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("message_id")]
            public long MessageId { get; set; }

            /// <summary>
            /// Identifier of the button
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("button_id")]
            public int ButtonId { get; set; }

            /// <summary>
            /// Identifier of the shared chat
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("shared_chat_id")]
            public long SharedChatId { get; set; }

            /// <summary>
            /// Pass true to check that the chat can be shared by the button instead of actually sharing it. Doesn't check bot_is_member and bot_administrator_rights restrictions.
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("only_check")]
            public bool OnlyCheck { get; set; }
        }

        /// <summary>
        /// Shares a chat after pressing a keyboardButtonTypeRequestChat button with the bot
        /// </summary>
        public static Task<Ok> ShareChatWithBotAsync(
            this Client client, long chatId = default, long messageId = default, int buttonId = default, long sharedChatId = default, bool onlyCheck = default)
        {
            return client.ExecuteAsync(new ShareChatWithBot
            {
                ChatId = chatId, MessageId = messageId, ButtonId = buttonId, SharedChatId = sharedChatId, OnlyCheck = onlyCheck
            });
        }
    }
}
// REUSE-IgnoreEnd