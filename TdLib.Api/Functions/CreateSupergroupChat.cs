using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Returns an existing chat corresponding to a known supergroup or channel
        /// </summary>
        public class CreateSupergroupChat : Function<Chat>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "createSupergroupChat";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Supergroup or channel identifier
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("supergroup_id")]
            public long SupergroupId { get; set; }

            /// <summary>
            /// Pass true to create the chat without a network request. In this case all information about the chat except its type, title and photo can be incorrect
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("force")]
            public bool Force { get; set; }
        }

        /// <summary>
        /// Returns an existing chat corresponding to a known supergroup or channel
        /// </summary>
        public static Task<Chat> CreateSupergroupChatAsync(
            this Client client, long supergroupId = default, bool force = default)
        {
            return client.ExecuteAsync(new CreateSupergroupChat
            {
                SupergroupId = supergroupId, Force = force
            });
        }
    }
}
// REUSE-IgnoreEnd