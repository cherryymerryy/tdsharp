using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Toggles whether the current user has sponsored messages enabled. The setting has no effect for users without Telegram Premium for which sponsored messages are always enabled
        /// </summary>
        public class ToggleHasSponsoredMessagesEnabled : Function<Ok>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "toggleHasSponsoredMessagesEnabled";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Pass true to enable sponsored messages for the current user; false to disable them
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("has_sponsored_messages_enabled")]
            public bool HasSponsoredMessagesEnabled { get; set; }
        }

        /// <summary>
        /// Toggles whether the current user has sponsored messages enabled. The setting has no effect for users without Telegram Premium for which sponsored messages are always enabled
        /// </summary>
        public static Task<Ok> ToggleHasSponsoredMessagesEnabledAsync(
            this Client client, bool hasSponsoredMessagesEnabled = default)
        {
            return client.ExecuteAsync(new ToggleHasSponsoredMessagesEnabled
            {
                HasSponsoredMessagesEnabled = hasSponsoredMessagesEnabled
            });
        }
    }
}
// REUSE-IgnoreEnd