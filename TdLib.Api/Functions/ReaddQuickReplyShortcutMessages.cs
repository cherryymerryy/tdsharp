using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Readds quick reply messages which failed to add. Can be called only for messages for which messageSendingStateFailed.can_retry is true and after specified in messageSendingStateFailed.retry_after time passed.
        /// If a message is readded, the corresponding failed to send message is deleted. Returns the sent messages in the same order as the message identifiers passed in message_ids. If a message can't be readded, null will be returned instead of the message
        /// </summary>
        public class ReaddQuickReplyShortcutMessages : Function<QuickReplyMessages>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "readdQuickReplyShortcutMessages";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Name of the target shortcut
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("shortcut_name")]
            public string ShortcutName { get; set; }

            /// <summary>
            /// Identifiers of the quick reply messages to readd. Message identifiers must be in a strictly increasing order
            /// </summary>
            [JsonProperty("message_ids", ItemConverterType = typeof(Converter))]
            public long[] MessageIds { get; set; }
        }

        /// <summary>
        /// Readds quick reply messages which failed to add. Can be called only for messages for which messageSendingStateFailed.can_retry is true and after specified in messageSendingStateFailed.retry_after time passed.
        /// If a message is readded, the corresponding failed to send message is deleted. Returns the sent messages in the same order as the message identifiers passed in message_ids. If a message can't be readded, null will be returned instead of the message
        /// </summary>
        public static Task<QuickReplyMessages> ReaddQuickReplyShortcutMessagesAsync(
            this Client client, string shortcutName = default, long[] messageIds = default)
        {
            return client.ExecuteAsync(new ReaddQuickReplyShortcutMessages
            {
                ShortcutName = shortcutName, MessageIds = messageIds
            });
        }
    }
}
// REUSE-IgnoreEnd