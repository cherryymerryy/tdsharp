using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Bans a member in a chat; requires can_restrict_members administrator right. Members can't be banned in private or secret chats. In supergroups and channels, the user will not be able to return to the group on their own using invite links, etc., unless unbanned first
        /// </summary>
        public class BanChatMember : Function<Ok>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "banChatMember";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Chat identifier
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("chat_id")]
            public long ChatId { get; set; }

            /// <summary>
            /// Member identifier
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("member_id")]
            public MessageSender MemberId { get; set; }

            /// <summary>
            /// Point in time (Unix timestamp) when the user will be unbanned; 0 if never. If the user is banned for more than 366 days or for less than 30 seconds from the current time, the user is considered to be banned forever. Ignored in basic groups and if a chat is banned
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("banned_until_date")]
            public int BannedUntilDate { get; set; }

            /// <summary>
            /// Pass true to delete all messages in the chat for the user that is being removed. Always true for supergroups and channels
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("revoke_messages")]
            public bool RevokeMessages { get; set; }
        }

        /// <summary>
        /// Bans a member in a chat; requires can_restrict_members administrator right. Members can't be banned in private or secret chats. In supergroups and channels, the user will not be able to return to the group on their own using invite links, etc., unless unbanned first
        /// </summary>
        public static Task<Ok> BanChatMemberAsync(
            this Client client, long chatId = default, MessageSender memberId = default, int bannedUntilDate = default, bool revokeMessages = default)
        {
            return client.ExecuteAsync(new BanChatMember
            {
                ChatId = chatId, MemberId = memberId, BannedUntilDate = bannedUntilDate, RevokeMessages = revokeMessages
            });
        }
    }
}
// REUSE-IgnoreEnd