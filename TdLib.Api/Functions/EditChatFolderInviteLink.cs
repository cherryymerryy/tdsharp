using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Edits an invite link for a chat folder
        /// </summary>
        public class EditChatFolderInviteLink : Function<ChatFolderInviteLink>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "editChatFolderInviteLink";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Chat folder identifier
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("chat_folder_id")]
            public int ChatFolderId { get; set; }

            /// <summary>
            /// Invite link to be edited
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("invite_link")]
            public string InviteLink { get; set; }

            /// <summary>
            /// New name of the link; 0-32 characters
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("name")]
            public string Name { get; set; }

            /// <summary>
            /// New identifiers of chats to be accessible by the invite link. Use getChatsForChatFolderInviteLink to get suitable chats. Basic groups will be automatically converted to supergroups before link editing
            /// </summary>
            [JsonProperty("chat_ids", ItemConverterType = typeof(Converter))]
            public long[] ChatIds { get; set; }
        }

        /// <summary>
        /// Edits an invite link for a chat folder
        /// </summary>
        public static Task<ChatFolderInviteLink> EditChatFolderInviteLinkAsync(
            this Client client, int chatFolderId = default, string inviteLink = default, string name = default, long[] chatIds = default)
        {
            return client.ExecuteAsync(new EditChatFolderInviteLink
            {
                ChatFolderId = chatFolderId, InviteLink = inviteLink, Name = name, ChatIds = chatIds
            });
        }
    }
}
// REUSE-IgnoreEnd