using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Changes accent color and background custom emoji of a channel chat. Requires can_change_info administrator right
        /// </summary>
        public class SetChatAccentColor : Function<Ok>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "setChatAccentColor";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Chat identifier
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("chat_id")]
            public long ChatId { get; set; }

            /// <summary>
            /// Identifier of the accent color to use. The chat must have at least accentColor.min_channel_chat_boost_level boost level to pass the corresponding color
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("accent_color_id")]
            public int AccentColorId { get; set; }

            /// <summary>
            /// Identifier of a custom emoji to be shown on the reply header and link preview background; 0 if none. Use chatBoostLevelFeatures.can_set_background_custom_emoji to check whether a custom emoji can be set
            /// </summary>
            [JsonConverter(typeof(Converter.Int64))]
            [JsonProperty("background_custom_emoji_id")]
            public long BackgroundCustomEmojiId { get; set; }
        }

        /// <summary>
        /// Changes accent color and background custom emoji of a channel chat. Requires can_change_info administrator right
        /// </summary>
        public static Task<Ok> SetChatAccentColorAsync(
            this Client client, long chatId = default, int accentColorId = default, long backgroundCustomEmojiId = default)
        {
            return client.ExecuteAsync(new SetChatAccentColor
            {
                ChatId = chatId, AccentColorId = accentColorId, BackgroundCustomEmojiId = backgroundCustomEmojiId
            });
        }
    }
}
// REUSE-IgnoreEnd