using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Returns the name of a bot in the given language. Can be called only if userTypeBot.can_be_edited == true
        /// </summary>
        public class GetBotName : Function<Text>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "getBotName";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Identifier of the target bot
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("bot_user_id")]
            public long BotUserId { get; set; }

            /// <summary>
            /// A two-letter ISO 639-1 language code or an empty string
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("language_code")]
            public string LanguageCode { get; set; }
        }

        /// <summary>
        /// Returns the name of a bot in the given language. Can be called only if userTypeBot.can_be_edited == true
        /// </summary>
        public static Task<Text> GetBotNameAsync(
            this Client client, long botUserId = default, string languageCode = default)
        {
            return client.ExecuteAsync(new GetBotName
            {
                BotUserId = botUserId, LanguageCode = languageCode
            });
        }
    }
}
// REUSE-IgnoreEnd