using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Sends data received from a keyboardButtonTypeWebApp Web App to a bot
        /// </summary>
        public class SendWebAppData : Function<Ok>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "sendWebAppData";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Identifier of the target bot
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("bot_user_id")]
            public long BotUserId { get; set; }

            /// <summary>
            /// Text of the keyboardButtonTypeWebApp button, which opened the Web App
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("button_text")]
            public string ButtonText { get; set; }

            /// <summary>
            /// The data
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("data")]
            public string Data { get; set; }
        }

        /// <summary>
        /// Sends data received from a keyboardButtonTypeWebApp Web App to a bot
        /// </summary>
        public static Task<Ok> SendWebAppDataAsync(
            this Client client, long botUserId = default, string buttonText = default, string data = default)
        {
            return client.ExecuteAsync(new SendWebAppData
            {
                BotUserId = botUserId, ButtonText = buttonText, Data = data
            });
        }
    }
}
// REUSE-IgnoreEnd