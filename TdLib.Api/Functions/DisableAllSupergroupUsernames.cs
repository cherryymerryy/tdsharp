using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Disables all active non-editable usernames of a supergroup or channel, requires owner privileges in the supergroup or channel
        /// </summary>
        public class DisableAllSupergroupUsernames : Function<Ok>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "disableAllSupergroupUsernames";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Identifier of the supergroup or channel
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("supergroup_id")]
            public long SupergroupId { get; set; }
        }

        /// <summary>
        /// Disables all active non-editable usernames of a supergroup or channel, requires owner privileges in the supergroup or channel
        /// </summary>
        public static Task<Ok> DisableAllSupergroupUsernamesAsync(
            this Client client, long supergroupId = default)
        {
            return client.ExecuteAsync(new DisableAllSupergroupUsernames
            {
                SupergroupId = supergroupId
            });
        }
    }
}
// REUSE-IgnoreEnd