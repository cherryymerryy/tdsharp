using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Changes accent color and background custom emoji for the current user; for Telegram Premium users only
        /// </summary>
        public class SetAccentColor : Function<Ok>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "setAccentColor";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Identifier of the accent color to use
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("accent_color_id")]
            public int AccentColorId { get; set; }

            /// <summary>
            /// Identifier of a custom emoji to be shown on the reply header and link preview background; 0 if none
            /// </summary>
            [JsonConverter(typeof(Converter.Int64))]
            [JsonProperty("background_custom_emoji_id")]
            public long BackgroundCustomEmojiId { get; set; }
        }

        /// <summary>
        /// Changes accent color and background custom emoji for the current user; for Telegram Premium users only
        /// </summary>
        public static Task<Ok> SetAccentColorAsync(
            this Client client, int accentColorId = default, long backgroundCustomEmojiId = default)
        {
            return client.ExecuteAsync(new SetAccentColor
            {
                AccentColorId = accentColorId, BackgroundCustomEmojiId = backgroundCustomEmojiId
            });
        }
    }
}
// REUSE-IgnoreEnd