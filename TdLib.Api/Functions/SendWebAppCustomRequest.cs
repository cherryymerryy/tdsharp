using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Sends a custom request from a Web App
        /// </summary>
        public class SendWebAppCustomRequest : Function<CustomRequestResult>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "sendWebAppCustomRequest";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Identifier of the bot
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("bot_user_id")]
            public long BotUserId { get; set; }

            /// <summary>
            /// The method name
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("method")]
            public string Method { get; set; }

            /// <summary>
            /// JSON-serialized method parameters
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("parameters")]
            public string Parameters { get; set; }
        }

        /// <summary>
        /// Sends a custom request from a Web App
        /// </summary>
        public static Task<CustomRequestResult> SendWebAppCustomRequestAsync(
            this Client client, long botUserId = default, string method = default, string parameters = default)
        {
            return client.ExecuteAsync(new SendWebAppCustomRequest
            {
                BotUserId = botUserId, Method = method, Parameters = parameters
            });
        }
    }
}
// REUSE-IgnoreEnd