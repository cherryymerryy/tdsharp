using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Creates new chat folder. Returns information about the created chat folder. There can be up to getOption("chat_folder_count_max") chat folders, but the limit can be increased with Telegram Premium
        /// </summary>
        public class CreateChatFolder : Function<ChatFolderInfo>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "createChatFolder";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// The new chat folder
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("folder")]
            public ChatFolder Folder { get; set; }
        }

        /// <summary>
        /// Creates new chat folder. Returns information about the created chat folder. There can be up to getOption("chat_folder_count_max") chat folders, but the limit can be increased with Telegram Premium
        /// </summary>
        public static Task<ChatFolderInfo> CreateChatFolderAsync(
            this Client client, ChatFolder folder = default)
        {
            return client.ExecuteAsync(new CreateChatFolder
            {
                Folder = folder
            });
        }
    }
}
// REUSE-IgnoreEnd