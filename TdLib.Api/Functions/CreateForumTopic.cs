using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Creates a topic in a forum supergroup chat; requires can_manage_topics administrator or can_create_topics member right in the supergroup
        /// </summary>
        public class CreateForumTopic : Function<ForumTopicInfo>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "createForumTopic";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Identifier of the chat
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("chat_id")]
            public long ChatId { get; set; }

            /// <summary>
            /// Name of the topic; 1-128 characters
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("name")]
            public string Name { get; set; }

            /// <summary>
            /// Icon of the topic. Icon color must be one of 0x6FB9F0, 0xFFD67E, 0xCB86DB, 0x8EEE98, 0xFF93B2, or 0xFB6F5F. Telegram Premium users can use any custom emoji as topic icon, other users can use only a custom emoji returned by getForumTopicDefaultIcons
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("icon")]
            public ForumTopicIcon Icon { get; set; }
        }

        /// <summary>
        /// Creates a topic in a forum supergroup chat; requires can_manage_topics administrator or can_create_topics member right in the supergroup
        /// </summary>
        public static Task<ForumTopicInfo> CreateForumTopicAsync(
            this Client client, long chatId = default, string name = default, ForumTopicIcon icon = default)
        {
            return client.ExecuteAsync(new CreateForumTopic
            {
                ChatId = chatId, Name = name, Icon = icon
            });
        }
    }
}
// REUSE-IgnoreEnd