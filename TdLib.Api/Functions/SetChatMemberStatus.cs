using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Changes the status of a chat member; requires can_invite_users member right to add a chat member, can_promote_members administrator right to change administrator rights of the member,
        /// and can_restrict_members administrator right to change restrictions of a user. This function is currently not suitable for transferring chat ownership; use transferChatOwnership instead.
        /// Use addChatMember or banChatMember if some additional parameters needs to be passed
        /// </summary>
        public class SetChatMemberStatus : Function<Ok>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "setChatMemberStatus";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Chat identifier
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("chat_id")]
            public long ChatId { get; set; }

            /// <summary>
            /// Member identifier. Chats can be only banned and unbanned in supergroups and channels
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("member_id")]
            public MessageSender MemberId { get; set; }

            /// <summary>
            /// The new status of the member in the chat
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("status")]
            public ChatMemberStatus Status { get; set; }
        }

        /// <summary>
        /// Changes the status of a chat member; requires can_invite_users member right to add a chat member, can_promote_members administrator right to change administrator rights of the member,
        /// and can_restrict_members administrator right to change restrictions of a user. This function is currently not suitable for transferring chat ownership; use transferChatOwnership instead.
        /// Use addChatMember or banChatMember if some additional parameters needs to be passed
        /// </summary>
        public static Task<Ok> SetChatMemberStatusAsync(
            this Client client, long chatId = default, MessageSender memberId = default, ChatMemberStatus status = default)
        {
            return client.ExecuteAsync(new SetChatMemberStatus
            {
                ChatId = chatId, MemberId = memberId, Status = status
            });
        }
    }
}
// REUSE-IgnoreEnd