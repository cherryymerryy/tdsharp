using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Sets the list of commands supported by the bot for the given user scope and language; for bots only
        /// </summary>
        public class SetCommands : Function<Ok>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "setCommands";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// The scope to which the commands are relevant; pass null to change commands in the default bot command scope
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("scope")]
            public BotCommandScope Scope { get; set; }

            /// <summary>
            /// A two-letter ISO 639-1 language code. If empty, the commands will be applied to all users from the given scope, for which language there are no dedicated commands
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("language_code")]
            public string LanguageCode { get; set; }

            /// <summary>
            /// List of the bot's commands
            /// </summary>
            [JsonProperty("commands", ItemConverterType = typeof(Converter))]
            public BotCommand[] Commands { get; set; }
        }

        /// <summary>
        /// Sets the list of commands supported by the bot for the given user scope and language; for bots only
        /// </summary>
        public static Task<Ok> SetCommandsAsync(
            this Client client, BotCommandScope scope = default, string languageCode = default, BotCommand[] commands = default)
        {
            return client.ExecuteAsync(new SetCommands
            {
                Scope = scope, LanguageCode = languageCode, Commands = commands
            });
        }
    }
}
// REUSE-IgnoreEnd